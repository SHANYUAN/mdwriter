"use strict";function markMarkdownTrailingSpaces(a){function b(){return a.pos%2==0?"markdown-single-trailing-space-even":"markdown-single-trailing-space-odd"}if(!a.string.length)return null;var c=a.match(/.*[^ ]/);if(c)return null;if(a.match(/ (?= +$)/))return b();var d=a.string,e=d.length,f=e>=2&&" "==d[e-2];return a.eat(/./),f?"markdown-line-break":b()}function storyTag(a){return a.string.length?a.match(/story{/)||a.match(/}story/)?"markdown-story":a.match(/{(.*?)}/)?"markdown-definition":a.match(/<!--(.*?)-->/)?"html-comment":void a.eat(/./):null}angular.module("meanMarkdownApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.codemirror","ngDialog","ngCssInjector","sun.scrollable","angular.filter"]).config(["$routeProvider",function(a){a.when("/",{redirectTo:"/login"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl"}).when("/files",{templateUrl:"views/files.html",controller:"MainCtrl"}).when("/editor/:id",{templateUrl:"./views/editor.html",controller:"EditorCtrl"}).when("/history/:id",{templateUrl:"./views/history.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("meanMarkdownApp").controller("MainCtrl",["$scope","$location","$routeParams","fileService","archivedFileService","ngDialog","AuthService",function(a,b,c,d,e,f,g){g.isAuthenticated()?a.currentUser=g.getUser():b.path("/login"),a.awesomeThings=[1,2,3],a.test="hello!",a.files=d.query(),a.newFile={},a.onCreateNewFile=function(){f.open({template:"./views/templates/dialog_new_file.html",disableAnimation:!0,closeByDocument:!0,scope:a})},a.onCreateConfirm=function(){var c={author:a.newFile.author,title:a.newFile.title,type:a.newFile.type,markdown:"This is **markdown**.","private":a.newFile["private"]};d.save(c,function(a){b.path("/editor/"+a._id)},function(){console.log("could not create new file!")})},a.onRemoveClick=function(b){f.openConfirm({template:"./views/templates/dialog_confirm_delete.html",disableAnimation:!0,scope:a}).then(function(c){d.remove({id:b},function(){console.log("file remove successfull!"),a.files=d.query(),f.close("ngdialog1")})},function(a){console.log("CANCELLED!")})},a.onDownloadClick=function(a){d.get({id:a},function(a){var b=new Blob([a.markdown],{type:"data:text/plain;charset=utf-8;"}),c=angular.element("<a></a>");c.attr("href",window.URL.createObjectURL(b)),c.attr("download","export.md"),c[0].click()})},a.onEditClick=function(b){d.get({id:b},function(b){a.file=b,f.open({template:"./views/templates/dialog_edit_file.html",disableAnimation:!0,scope:a})})},a.getArchivedFiles=function(){var b=c.id;a.archivedFiles=e.query({id:b})},a.onOpenAsNewFileClick=function(a){var c={author:a.author,title:a.title+" (restored)",type:a.type,"private":a["private"],markdown:a.markdown};"OLAT"===c.type?c.type="opOlat":"presentation"===c.type&&(c.type="prMainzed"),d.save(c,function(a){b.path("/editor/"+a._id)},function(){console.log("could not create new file!")})},a.onRevertFileClick=function(c){var e={author:c.author,title:c.title,type:c.type,"private":c["private"],markdown:c.markdown};d.update({id:c.fileID},e,function(){console.log("file updated successfully!"),a.files=d.query(),b.path("/files")},function(){console.log("could not update file!")})},a.onSaveClick=function(b){d.update({id:b._id},b,function(){console.log("file updated successfully!"),a.files=d.query()},function(){console.log("could not update file!")})},a.onLogoutClick=function(){g.logout(),b.path("/login")},$("#maus").hover(function(){$(this).attr("src","../images/maussmile.svg")}),$("#maus").mouseleave(function(){$(this).attr("src","../images/maus.svg")})}]),angular.module("meanMarkdownApp").controller("EditorCtrl",["$scope","$location","$timeout","$routeParams","HTMLService","$document","fileService","AuthService","ngDialog","definitionService","EditorService",function(a,b,c,d,e,f,g,h,i,j,k){function l(){$("#editor-tools").css("opacity","0.4")}function m(){var a=window.innerHeight-44-60-8;$(".nano").css("height",a)}h.isAuthenticated()||b.path("/login"),a.showSuccess=!1,a.showError=!1,a.editMode=!1,a.codemirrorLoaded=function(b){k.init(b),a.editor=k.getEditor()},g.get({id:d.id},function(b){a.file=b}),a.editorOptions={lineWrapping:!0,lineNumbers:!1,mode:"markdown",showTrailingSpace:!1,showMarkdownLineBreaks:!0,showOlatMarkdown:!0,scrollbarStyle:null},a.onSaveClick=function(){var b=a.file._id,d={author:a.file.author,markdown:a.file.markdown,type:a.file.type,title:a.file.title,"private":a.file["private"]};g.update({id:b},d,function(){a.unsavedChanges=!1,a.showSuccess=!0,c(function(){a.showSuccess=!1},3e3)},function(){a.showError=!0,c(function(){a.showError=!1},3e3)})},a.onFilesClick=function(){a.unsavedChanges?i.openConfirm({template:"./views/templates/dialog_confirm_home.html",scope:a}).then(function(a){b.path("/files")},function(a){}):b.path("/files")},a.addSnippet=function(b){a.editor.replaceSelection(b),a.editor.focus()},a.addDefinition=function(b){var c="{"+b.word+"}";a.addSnippet(c)},a.onLabelClick=function(){var b="[I'm a Label](http://labeling.i3mainz.hs-mainz.de/label/#ec25d32d-3c1a-4539-9755-9bc63c17d989)";a.addSnippet(b)},a.onLinkClick=function(){var b="[I'm a link](https://www.google.com)";a.addSnippet(b)},a.onImageClick=function(){var b='![image-alt](bilder/filname.jpg "caption; author; license; url")';a.addSnippet(b)},a.onStoryScriptClick=function(){var b,c=a.editor.getSelection();b=c.length?"\nstory{\n\n"+c+"\n\n}story\n":"\nstory{\n\nWrite **normal** markdown inside *storyscript* tags\n\n}story\n",a.addSnippet(b)},a.onDefinitionClick=function(){i.open({template:"./views/templates/dialog_definitions.html",scope:a,disableAnimation:!0,preCloseCallback:function(){a.editMode=!1}})},a.getDefinitions=function(){a.definitions=j.query()},a.onExportClick=function(){a.filename=a.file.title.replace(/\s/g,"_")+".html",i.open({template:"./views/templates/dialog_export.html",disableAnimation:!0,scope:a})},a.onDownloadConfirm=function(b,c,d){var f={title:c,contentTable:d};e.getOlat(a.file,f,function(a){var c=new Blob([a],{type:"data:text/plain;charset=utf-8;"}),d=angular.element("<a></a>");d.attr("href",window.URL.createObjectURL(c)),d.attr("download",b),d[0].click()})},a.onUndoClick=function(){a.editor.undo()},a.onRedoClick=function(){a.editor.redo()},a.onPreviewClick=function(){e.getOlat(a.file,!1,function(b){a.html=b,i.open({template:"./views/templates/dialog_preview.html",disableAnimation:!0,closeByDocument:!0,scope:a})})},a.onDefinitionCreateClick=function(){a.definition={},a.editMode=!0},a.onDefinitionEditClick=function(b){a.definition=b,a.editMode=!0},a.onDefinitionSaveClick=function(b){b._id?j.update({id:b._id},b,function(){a.getDefinitions(),a.editMode=!1}):j.save(b,function(){a.getDefinitions(),a.editMode=!1})},a.onRemoveDefinitionClick=function(b){j.remove({id:b},function(){a.getDefinitions()})},a.onEditorChange=function(){a.unsavedChanges=!0},a.onApplyDefinitionChanges=function(){a.hasChanges=!1,a.definitions.forEach(function(a){j.update({id:a._id},a,function(){})}),a.newDefinition&&j.save(a.newDefinition,function(){a.newDefinition=!1,a.getDefinitions(),a.createNewMode=!1})},a.onCreateDefinitionClick=function(){a.newDefinition={},a.createNewMode=!0},a.onDeleteDefinitionClick=function(b){j.remove({id:b},function(){a.getDefinitions()})},a.onDefinitionChange=function(){a.hasChanges=!0},$(document).keydown(function(b){var c=b.keyCode||b.which;b.ctrlKey&&76===c&&(console.log("Ctrl + L"),a.onLinkClick(),b.preventDefault())}),$(document).keydown(function(b){var c=b.keyCode||b.which;b.ctrlKey&&73===c&&(console.log("Ctrl + I"),a.onImageClick(),b.preventDefault())}),$(document).keydown(function(b){var c=b.keyCode||b.which;b.ctrlKey&&83===c&&(console.log("Ctrl + S"),a.onSaveClick(),b.preventDefault())}),$(document).keydown(function(b){var c=b.keyCode||b.which;b.ctrlKey&&90===c&&(console.log("Ctrl + Z"),a.onUndoClick(),b.preventDefault())}),$(window).resize(function(){m()});var n;document.getElementsByTagName("body")[0];window.addEventListener("mousemove",function(){$("#editor-tools").css("opacity","1"),clearTimeout(n),n=setTimeout(l,1400)}),$(window).bind("beforeunload",function(){return a.unsavedChanges?"It seems like you made unsaved changes to your document. Are you sure you want to leave without saving?":void 0})}]),angular.module("meanMarkdownApp").factory("fileService",["$http","$resource",function(a,b){return b("/api/files/:id",null,{update:{method:"PUT"}})}]),angular.module("meanMarkdownApp").controller("DefinitionsCtrl",["$scope","$routeParams","$location","definitionService","temporaryService",function(a,b,c,d,e){a.definitions=d.query(),a.awesomeThings=[1,2,3],a.getDefinition=function(){var c=b.id;d.get({id:c},function(b){a.definition=b}),a.definition||(a.definition={})}}]),angular.module("meanMarkdownApp").factory("definitionService",["$http","$resource",function(a,b){return b("/api/definitions/:id",null,{update:{method:"PUT"}})}]),angular.module("meanMarkdownApp").directive("navbar",["$location",function(a){return{templateUrl:"/views/templates/navbar.html",restrict:"E",link:function(a,b,c){a.isActive=function(a){}}}}]),CodeMirror.defineOption("showMarkdownLineBreaks",!1,function(a,b,c){c==CodeMirror.Init&&(c=!1),c&&!b?a.removeOverlay("show-markdown-line-breaks"):!c&&b&&a.addOverlay({name:"show-markdown-line-breaks",token:markMarkdownTrailingSpaces})}),CodeMirror.defineOption("showOlatMarkdown",!1,function(a,b,c){c===CodeMirror.Init&&(c=!1),c&&!b?a.removeOverlay("show-olat-markdown"):!c&&b&&a.addOverlay({name:"show-olat-markdown",token:storyTag})}),angular.module("meanMarkdownApp").service("HTMLService",["definitionService",function(a){function b(a,b){return'<!DOCTYPE html>\n<html lang="de"><head>\n<title>'+b+'</title>\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n<meta property="dc:creator" content="Kai Christian Bruhn, Matthias Dufner, Thomas Engel, Axel Kunz" />\n<link rel="stylesheet" href="style/olat.css">\n</head>\n<body>\n'+a+'<script src="https://code.jquery.com/jquery-2.2.3.min.js"></script>\n<script src="javascript/olat.js"></script>\n</body>\n</html>\n'}function c(b,c){var d=b.match(/\{(.*?)\}/g);if(d){var e={};d.forEach(function(g,h){var i=a.query(function(){i.forEach(function(a){var i,j,k=g.replace("{","").replace("}","");if(k.indexOf(":")>-1?(j=k.split(":")[0],i=k.split(":")[1].trim()):i=k,a.word===i){var l;l=j?'<a href="#definitions-table" title="'+a.text+'" class="definition">'+j+"</a>":'<a href="#definitions-table" title="'+a.text+'" class="definition">'+a.word+"</a>",b=b.replace(g,l),e.hasOwnProperty(a.word)||(e[a.word]=a),h===d.length-1&&Object.keys(e).length&&(b+=f(e),c(b))}})})})}else console.log("no definitions found!"),c(b)}function d(a){var b=[],c=a.match(/story{/g),d=1;return c&&c.forEach(function(a){b.push({counter:d,name:"Story Teil "+d}),d++}),b}function e(a){var b="";return a.length&&(b+='<div id="images-table" class="images-table">\n<h4>Abbildungen</h4>\n<ul>',a.forEach(function(a){b+="<li>",b+=a.preCaption+"<br>",b+=a.title+"<br>",void 0!==a.author&&(b+=a.author+"<br>"),void 0!==a.license&&(b+=a.license+"<br>"),void 0!==a.url&&(b+='<a href="'+a.url+'" target="_blank">Quelle</a>'),b+="</li>"})),b+="</ul>\n</div>\n"}function f(a){var b="";return b+='<div id="definitions-table" class="definitions-table">\n<h4>Glossar</h4>\n<ul>',Object.keys(a).sort().forEach(function(c){var d=a[c];b+=d.url?'<li><a href="#" target="_blank" class="definition" title="'+d.text+'">'+d.word+'</a> (<a href="'+d.url+'" target="_blank">website</a>)</li>':'<li><a href="#" target="_blank" class="definition" title="'+d.text+'">'+d.word+"</a></li>"}),b+="</ul>\n</div>\n"}function g(a,b,c){var b=b||!1,d="";return d+='<div id="headings-table" class="headings-table">\n<ul>',d+='<li><a href="#page-title">Top</a></li>\n',d+='<li class="seperator"></li>\n',a.length&&a.forEach(function(a){1===a.level&&(d+='<li><a href="#h'+a.level+"-"+a.counter+'">'+a.text+"</a></li>")}),b&&(d+='<li class="seperator"></li>\n',b.forEach(function(a){d+='<li class="story"><a href="#story'+a.counter+'">'+a.name+"</a></li>\n"})),d+='<li class="seperator"></li>\n',c.length&&(d+='<li><a href="#images-table">Abbildungen</a></li>\n'),d+='<li><a href="#links-table">Links</a></li>\n',d+='<li><a href="#definitions-table">Glossar</a></li>\n',d+="</ul>\n</div>\n"}function h(a){return'<h1 class="page-title" id="page-title">'+a+"</h1>"}this.getOlat=function(a,f,i){var f=f||{title:!0,contentTable:!0},j=a.markdown,k=a.title,l=new marked.Renderer,m=[],n=0;l.heading=function(a,b){n++;a.toLowerCase().replace(/[^\w]+/g,"-");return m.push({text:a,level:b,counter:n}),"<h"+b+' id="h'+b+"-"+n+'">'+a+"</h"+b+">"};var o=[];l.link=function(a,b,c){return a.startsWith("#")||o.push({url:a,text:c.replace("!","")}),c.startsWith("!")?void 0:'<a href="'+a+'" target="_blank">'+c+"</a>"};var p=[],q=1;l.image=function(a,b,c){var d=b.split("; "),e=d[0].replace(/\\/g,""),f=d[1],g=d[2],h=d[3],b=c,i="Abb."+q;return p.push({url:h,caption:e,author:f,license:g,title:b,preCaption:i}),q++,'<figure id="'+c+'">\n<img src="'+a+'" alt="'+c+'"><figcaption>\n'+i+"<br>"+e+'<br><a href="#images-table">\n(Quelle)\n</a>\n</figcaption>\n</figure>\n'};var r=marked(j,{renderer:l}),s=d(r);r=this.replaceStoryTags(r),r+=e(p),r+=this.createLinksTable(o),f.contentTable===!0&&(console.log("add table of content!"),r=g(m,s,p)+r),f.title===!0&&(r=h(k)+r),c(r,function(a){a=b(a,k),i(a)})},this.replaceStoryTags=function(a){var b=a.match(/story{/g),c=1;if(b)for(var d=0;d<b.length;d++)a=a.replace(/<p>story{<\/p>/,'<div class="story" id="story'+c+'">'),c++;return a=a.replace(/<p>}story<\/p>/g,"</div>")},this.createLinksTable=function(a){var b="";if(a.length){b+='<div id="links-table" class="links-table">\n<h4>Links</h4>\n<ul>\n';for(var c in a){var d=a[c];b+="<li><a href='"+d.url+"' target='_blank'>"+d.text+"</a></li>\n"}b+="</ul>\n</div>"}return b}}]),angular.module("meanMarkdownApp").factory("archivedFileService",["$resource",function(a){return a("/api/archivedfiles/:id",null,{update:{method:"PUT"}})}]),angular.module("meanMarkdownApp").controller("LoginCtrl",["$scope","AuthService","$location","$timeout",function(a,b,c,d){b.isAuthenticated()&&c.path("/files"),a.onLoginSubmit=function(){a.validating=!0,b.login(a.username,a.password,function(){c.path("/files"),a.validating=!1},function(){a.showError=!0,d(function(){a.showError=!1},3e3),a.validating=!1})},$(document).keydown(function(a){var b=a.keyCode||a.which;13===b&&($("#login-button").attr("disabled")||$("#login-button").click())})}]),angular.module("meanMarkdownApp").service("AuthService",["$cookieStore",function(a){var b=[{name:"axel",password:"axel",group:"admin"},{name:"matthias",password:"matthias",group:"admin"},{name:"anne",password:"mainzed",group:"mainzed"},{name:"kai",password:"mainzed",group:"mainzed"},{name:"sarah",password:"sarah",group:"look-diva"}];this.setUser=function(b){a.put("currentUser",b)},this.getUser=function(){return a.get("currentUser")},this.isAuthenticated=function(){return a.get("currentUser")?!0:!1},this.login=function(a,c,d,e){var f=this,g=!1;b.forEach(function(b){b.name===a&&b.password===c&&(g=!0,f.setUser({name:b.name,group:b.group}),d())}),g||e()},this.logout=function(){a.remove("currentUser")}}]),angular.module("meanMarkdownApp").directive("msFilesPanel",["$filter",function(a){return{templateUrl:"../views/templates/files-panel.html",restrict:"E",link:function(b,c,d){b.currentFileType=d.filetype,b.groupHasValidFiles=function(a){var c=!1;return b.files.forEach(function(d){d.type!==a||d.author!==b.currentUser.name&&d["private"]!==!1||(c=!0)}),c},b.getFormattedDate=function(b){var c="dd.MM.yyyy",d=a("date")(b,c),e=a("date")(new Date,c),f=a("date")(new Date-1,c);return d===e?"Heute":d===f?"Gestern":d},b.setFilter=function(a){if(a.updated_at){var c=a.updated_at;b.currentFilter={updated_at:c.substring(0,10)}}else b.currentFilter=a},b.onResetClick=function(){b.currentFilter=void 0}}}}]),angular.module("meanMarkdownApp").directive("msEditorToolbar",function(){return{template:"<div></div>",restrict:"E",link:function(a,b,c){b.text("this is the msEditorToolbar directive")}}}),angular.module("meanMarkdownApp").service("EditorService",function(){var a,b;this.init=function(c){a=c,b=c.getDoc()},this.getEditor=function(){return a}}),angular.module("meanMarkdownApp").directive("msEditor",function(){return{template:'<div id="codeMirrorEditor" ui-codemirror="{ onLoad : codemirrorLoaded }" ui-codemirror-opts="editorOptions" ng-model="file.markdown" ng-change="onEditorChange()"></div>',restrict:"E",link:function(a,b,c){}}}),angular.module("meanMarkdownApp").run(["$templateCache",function(a){a.put("views/definitions.html",'<div class="container"> <!-- search box --> <input type="text" class="form-control" placeholder="Search"> <table class="table"> <thead> <tr> <th>#</th> <th>Word</th> <th>Tooltip</th> <th>URL</th> <th>Author</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="definition in definitions"> <th scope="row">{{$index + 1}}</th> <td>{{ definition.word }}</td> <td>{{ definition.text }}</td> <td>{{ definition.url }}</td> <td>{{ definition.author }}</td> <td> <a ng-href="#/definitions/{{definition._id}}"> <span class="glyphicon glyphicon-pencil"></span> Edit </a> </td> </tr> </tbody> </table> <a type="button" href="#/editor" class="btn btn-default btn-sm">back to editor</a> <button class="btn btn-default btn-sm" ng-click="onCreateDefinitionClick()">create new </button></div>'),a.put("views/editor.html",'<!-- title --> <form> <div class="form-group" id="editor-title"> <input type="text" class="form-control" placeholder="Title" ng-model="file.title"> </div> </form> <scrollable> test123 <ms-editor></ms-editor> </scrollable> <div id="editor-tools"> <div class="btn-group" role="group"> <button class="btn btn-default btn-sm" ng-click="onFilesClick()"> <span class="icon-home"></span> </button> </div> <!-- undo and redo buttons --> <div class="btn-group" role="group"> <button class="btn btn-default btn-sm" data-toggle="tooltip" title="Undo (Ctrl + Z)" ng-click="onUndoClick()"><i class="fa fa-undo"></i></button> <button class="btn btn-default btn-sm" ng-click="onRedoClick()" data-toggle="tooltip" title="Redo"><i class="fa fa-repeat"></i></button> </div> <!-- help button--> <div class="btn-group" role="group"> <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank" class="btn btn-default btn-sm nav-link" role="button" data-toggle="tooltip" title="Markdown Help"> Spickzettel </a> </div> <!-- image, links & storyscript buttons --> <div class="btn-group" role="group"> <!-- image button --> <button class="btn btn-default btn-sm" ng-click="onImageClick()" data-toggle="tooltip" title="Insert Image (Ctrl + I)"> Bild </button> <button class="btn btn-default btn-sm" ng-click="onDefinitionClick()"> Glossareintrag </button> <!-- link button --> <div class="btn-group" role="group"> <button class="btn btn-default btn-sm" ng-click="onLinkClick()" data-toggle="tooltip" title="Ctrl + L"> Link </button> </div> <!-- storyscript button --> <button class="btn btn-default btn-sm" ng-click="onStoryScriptClick()" data-toggle="tooltip" title="Insert Storytag"> Story </button> </div> <!-- export --> <button class="btn btn-default btn-sm marginleft" ng-click="onExportClick()"> Export </button> <!-- preview button --> <button class="btn btn-default btn-sm" ng-click="onPreviewClick()" ng-disabled="editor.getValue().length < 1"> Preview </button> <!-- save button --> <div class="btn-group" role="group"> <button class="btn btn-default btn-sm pull-right" ng-click="onSaveClick()" data-toggle="tooltip" title="Save (Ctrl + S)" ng-disabled="!unsavedChanges"> Speichern </button> </div> <span class="save-text" ng-show="showSuccess === true">... saved!</span> <span class="save-text" ng-show="showError === true">... someting went wrong!</span> </div>'),a.put("views/files.html",'<div class="row files-top"> <div class="listcontainer"> <scrollable> <ms-files-panel class="filesection"></ms-files-panel> </scrollable> <!-- create new --> <div id="create-new" class="file createfile" ng-click="onCreateNewFile()"><i class="fa fa-plus-circle" aria-hidden="true"></i> Create new</div> </div> </div> <div class="displayuser"> <span ng-show="currentUser">{{ currentUser.name }} ({{ currentUser.group }}), </span> <button type="button" class="btn btn-default underline" ng-click="onLogoutClick()">Logout</button> </div> <div id="maustext">maus version 0.01</div> <img id="maus" src="../images/maus.svg" data-toggle="tooltip" title="Leave me alone!"> <!--<button class="btn btn-primary btn-sm" ng-click="onCreateNewFile()">New</button>-->'),a.put("views/history.html",'<div ng-init="getArchivedFiles()"> <h3>{{archivedFiles[0].title}} - Archivierte Versionen</h3> <span ng-show="archivedFiles.length < 2">No archived versions exist for this file.</span> <!--archived files found for this document: {{ archivedFiles.length }}--> <div class="version" ng-repeat="archivedFile in archivedFiles | orderBy: \'created_at\':true" ng-if="$index > 0"> <!-- ng-if skips first item --> <div>{{ archivedFile.created_at.substring(0,10) }} {{ archivedFile.created_at.substring(11,16) }}</div> <div>changed by {{ archivedFile.author }}</div> <button type="button" class="btn" ng-click="onOpenAsNewFileClick(archivedFile)">Open as new file</button> <button type="button" class="btn" ng-click="onRevertFileClick(archivedFile)">Revert file back to this version</button> </div> </div> <a ng-href="#/files" class="home">back to files</a>'),a.put("views/login.html",'<div class="col-md-3"> <form> <div class="form-group"> <input type="text" class="form-control" placeholder="Username" ng-model="username"> </div> <div class="form-group"> <input type="password" class="form-control" placeholder="Password" ng-model="password"> </div> <button id="login-button" type="button" class="btn btn-default" ng-click="onLoginSubmit()" ng-disabled="!username || !password || validating">Login</button> <span ng-show="showError" class="text-danger">Failed!</span> <span ng-show="showSuccess" class="text-success">Success!</span> </form> </div>'),a.put("views/templates/dialog_confirm_delete.html",'<h2>Are you ABSOLUTELY sure?</h2> <p> This action CANNOT be undone. This will permanently delete "{{ file.title }}" created by {{ file.author}}. </p><p> <button type="button" ng-click="confirm()" class="btn btn-danger btn-sm">Confirm</button></p>'),a.put("views/templates/dialog_confirm_home.html",'<p> Unsaved changes to your file may be lost! Press cancel and save your changes or continue without saving? </p> <button type="button" class="btn btn-danger btn-sm" ng-click="confirm()">Continue Anyway</button> <button type="button" class="btn btn-default btn-sm" ng-click="closeThisDialog()">Cancel</button> <!-- <button type="button" class="btn btn-default btn-sm">Save changes and continue</button> -->'),a.put("views/templates/dialog_confirm_refresh.html",'<p> It looks like you have unsaved changes! Are you sure you want to leave the page? Unsaved changes to your file may be lost! </p> <button type="button" class="btn btn-danger btn-sm" ng-click="confirm()">Leave Anyway</button> <button type="button" class="btn btn-default btn-sm" ng-click="closeThisDialog()">Cancel</button> <!-- <button type="button" class="btn btn-default btn-sm">Save changes and continue</button> -->'),a.put("views/templates/dialog_definitions.html",'<!--<button class="btn btn-default btn-sm" ng-click="onDefinitionsEditClick(); closeThisDialog()">edit</button>--><!--<div ng-hide="editMode">\n  <h4>Definitions</h4>\n\n  <input type="text" class="form-control" placeholder="Filter by Name" ng-model="filterBox">\n\n  <scrollable class="definitons-table">\n    <table class="table filegroup fullwidth" ng-init="getDefinitions()"> \n      <tbody> \n        <tr ng-repeat="definition in definitions | filter: { word: filterBox }"> \n          <td>\n            <a ng-click="closeThisDialog(); addDefinition(definition)" data-toggle="tooltip" title="Insert this definition">\n              {{ definition.word }}\n            </a>\n          </td> \n\n        </tr> \n\n      </tbody> \n    </table>\n  </scrollable>\n  <button class="btn btn-default btn-sm toolbar" ng-click="onDefinitionCreateClick()">\n    Bearbeiten\n  </button>\n</div>--><!-- show when clicked edit --><!--<form ng-show="editMode">\n  <div class="form-group">\n    <label for="exampleInputEmail5">Word</label>\n    <input type="text" class="form-control" id="exampleInputEmail5" placeholder="Word" ng-model="definition.word">\n  </div>\n\n  <div class="form-group">\n    <label for="exampleInputEmail1">Definition</label>\n    <textarea class="form-control" rows="3" placeholder="Definition" ng-model="definition.text" required></textarea>\n  </div>\n\n  \n\n\n  <div class="form-group">\n    <label for="exampleInputPassword1">Source</label>\n    <input type="text" class="form-control" id="exampleInputPassword1" placeholder="Source" ng-model="definition.author">\n  </div>\n\n  <div class="form-group">\n    <label for="exampleInputPassword1">Website</label>\n    <input type="text" class="form-control" id="exampleInputPassword1" placeholder="Website" ng-model="definition.url">\n  </div>\n  \n  <button type="submit" class="btn btn-default" ng-click="onDefinitionSaveClick(definition)" ng-disabled="!definition.word">Save</button>\n\n</form>--> <h3>Definitions</h3> <div class="container" ng-init="getDefinitions()"> <!-- search box --> <input type="search" class="form-control" placeholder="Search by Word" ng-model="filterBox"> <table class="table"> <thead> <tr> <th>Word</th> <th>Definition</th> <th>Source</th> <th>Website</th> </tr> </thead> <tbody> <tr ng-repeat="definition in definitions | filter:filterBox | orderBy: \'updated_at\'"> <td> <button type="button" class="btn btn-default" ng-click="closeThisDialog(); addDefinition(definition)"> {{ definition.word }} </button> </td> <td> <input type="text" placeholder="Definition" ng-model="definition.text" ng-class="textClass" ng-init="textClass = [\'def-table-entries\']" ng-focus="textClass = [\'form-control\']" ng-blur="textClass = [\'def-table-entries\']" ng-change="onDefinitionChange()"> </td> <td> <input type="text" placeholder="Source" ng-model="definition.author" ng-class="authorClass" ng-init="authorClass = [\'def-table-entries\']" ng-blur="authorClass = [\'def-table-entries\']" ng-focus="authorClass = [\'form-control\']" ng-change="onDefinitionChange()"> </td> <td> <input type="text" placeholder="Website" ng-model="definition.url" ng-class="urlClass" ng-init="urlClass = [\'def-table-entries\']" ng-blur="urlClass = [\'def-table-entries\']" ng-focus="urlClass = [\'form-control\']" ng-change="onDefinitionChange()"> </td> <!-- remove --> <td> <button type="button" class="btn btn-default" ng-click="onDeleteDefinitionClick(definition._id)"> <i class="fa fa-trash" aria-hidden="true"></i> </button> </td> </tr><!-- end repeat --> <!-- new definition --> <tr ng-show="createNewMode"> <td> <input type="text" class="form-control" placeholder="Word" ng-model="newDefinition.word" ng-change="onDefinitionChange()"> </td> <td> <input type="text" class="form-control" placeholder="Definition" ng-model="newDefinition.text" ng-change="onDefinitionChange()"> </td> <td> <input type="text" class="form-control" placeholder="Source" ng-model="newDefinition.author" ng-change="onDefinitionChange()"> </td> <td> <input type="text" class="form-control" placeholder="Website" ng-model="newDefinition.url" ng-change="onDefinitionChange()"> </td> </tr> </tbody> </table> <button class="btn btn-default btn-sm" ng-click="onApplyDefinitionChanges()" ng-disabled="!hasChanges">apply changes <button class="btn btn-default btn-sm" ng-click="onCreateDefinitionClick()" ng-disabled="createNewMode">create new </button></button></div>'),a.put("views/templates/dialog_edit_file.html",'<form ng-init="getFile()"> <div class="form-group"> <label for="authorInput">Author</label> <input type="text" class="form-control" id="authorInput" placeholder="Author" ng-model="file.author" readonly> </div> <div class="form-group"> <label for="titleInput">Title</label> <input type="text" class="form-control" id="titleInput" placeholder="Title" ng-model="file.title"> </div> <div class="form-group"> <label for="typeInput">Type</label> <select class="form-control" id="typeInput" ng-model="file.type"> <option value="opOlat">OLAT</option> <option value="opMainzed">Mainzed Jahresbericht</option> <option value="prMainzed">Mainzed Presentation</option> <!--<option value="prI3mainz">i3mainz Presentation</option>--> </select> </div> <!-- private checkbox --> <div class="form-group"> <label class="checkbox-inline"><input type="checkbox" value="" ng-model="file.private">Private</label> </div> <!-- save button --> <button type="submit" class="btn btn-primary btn-sm" ng-disabled="!file.title || !file.author || !file.type" ng-click="onSaveClick(file) || closeThisDialog()"> Save </button> <!-- delete button --> <button type="submit" class="btn btn-danger btn-sm pull-right" ng-click="onRemoveClick(file._id)"> Delete </button> </form>'),a.put("views/templates/dialog_export.html",'<form ng-init="includeTable = true; addTitle = true"> <div class="form-group"> <label for="inputTitle">Filename</label> <input type="text" class="form-control" id="inputTitle" placeholder="export.html" ng-model="filename"> </div> <div class="checkbox"> <label> <input type="checkbox" ng-model="addTitle"> Add Title </label> </div> <div class="checkbox"> <label> <input type="checkbox" ng-model="includeTable"> Add Table of Content </label> </div> <button type="button" class="btn btn-default" ng-click="onDownloadConfirm(filename, addTitle, includeTable) || closeThisDialog()" ng-disabled="!filename">Export</button> </form>'),a.put("views/templates/dialog_history.html",'<div ng-init="getArchivedFiles()"> TEST1231a <div ng-repeat="file in files"> 123 <span>Title:</span>{{ file.title }} <span>Author:</span>{{ file.author }} <span>Created:</span>{{ file.updated_at }} </div> </div> <ul> <li ng-repeat="archivedFile in archivedFiles"> {{ archivedFile.title }} </li> </ul>'),a.put("views/templates/dialog_new_file.html",'<form> <div class="form-group"> <label for="authorInput">Author</label> <input type="text" class="form-control" id="authorInput" placeholder="Author" ng-model="newFile.author" readonly ng-init="newFile.author = currentUser.name"> </div> <div class="form-group"> <label for="titleInput">Title</label> <input type="text" class="form-control" id="titleInput" placeholder="Title" ng-model="newFile.title"> </div> <div class="form-group"> <label for="typeInput">Type</label> <select class="form-control" id="typeInput" ng-model="newFile.type" ng-init="newFile.type = \'opOlat\'"> <option value="opOlat">OLAT</option> <option value="opMainzed">Mainzed Jahresbericht</option> <option value="prMainzed">Mainzed Presentation</option> <!--<option value="prI3mainz">i3mainz Presentation</option>--> </select> </div> <!-- private checkbox --> <div class="form-group"> <label class="checkbox-inline"><input type="checkbox" value="" ng-model="newFile.private" ng-init="newFile.private = true">Private</label> </div> <button type="submit" class="btn btn-primary" ng-disabled="!newFile.title || !currentUser" ng-click="onCreateConfirm() || closeThisDialog()">Create</button> </form>'),a.put("views/templates/dialog_preview.html",'<h3>Preview</h3> <scrollable> <div ng-bind-html="html"></div> </scrollable>'),a.put("views/templates/files-panel.html",'<div ng-repeat="(key, value) in files | groupBy: \'type\'" ng-show="groupHasValidFiles(key)"> <!-- custom section names --> <span class="tableheader" ng-show="key === \'opOlat\'">OLAT</span> <span class="tableheader" ng-show="key === \'opMainzed\'">Mainzed Jahresbericht</span> <span class="tableheader" ng-show="key === \'prMainzed\'">Mainzed Presentation</span> <span class="tableheader" ng-show="key === \'prI3mainz\'">i3mainz Presentation</span> <table class="filegroup"> <colgroup> <col span="1" style="width: 60%"> <col span="1" style="width: 15%"> <col span="1" style="width: 10%"> <col span="1" style="width: 5%"> <col span="1" style="width: 10%"> </colgroup> <!-- show button to reset filter as column header when a filter is active --> <tr ng-show="currentFilter"> <!-- filename --> <td> </td> <!-- date --> <td> <button type="button" class="btn btn-default btn-sm" ng-click="onResetClick()" ng-show="currentFilter[\'updated_at\']" data-toggle="tooltip" title="Reset Filter"> <i class="fa fa-times" aria-hidden="true"></i> </button> </td> <!-- author --> <td> <button type="button" class="btn btn-default btn-sm" ng-click="onResetClick()" ng-show="currentFilter[\'author\']" data-toggle="tooltip" title="Reset Filter"> <i class="fa fa-times" aria-hidden="true"></i> </button> </td> <!-- private --> <td> <button type="button" class="btn btn-default btn-sm" ng-click="onResetClick()" ng-show="currentFilter[\'private\']" data-toggle="tooltip" title="Reset Filter"> <i class="fa fa-times" aria-hidden="true"></i> </button> </td> <!-- menu --> <td></td> </tr> <!-- only show documents of the current user or documents that are not private and nd are in the same group --> <tr ng-repeat="file in value | filter:currentFilter | orderBy:\'-updated_at\'" ng-show="file.author === currentUser.name || file.private === false"> <td class="colfilename"> <a ng-href="#/editor/{{file._id}}"> {{ file.title }} </a> </td> <td> <button type="button" class="btn btn-link" ng-click="setFilter({ updated_at: file.updated_at })" ng-disabled="currentFilter[\'updated_at\']"> {{ getFormattedDate(file.updated_at) }} </button> </td> <td> <button type="button" class="btn btn-link" ng-click="setFilter({ author: file.author })" ng-disabled="currentFilter[\'author\']"> {{ file.author }} </button> </td> <td class="colfilestate"> <button type="button" class="btn btn-link" ng-click="setFilter({ private: true })" ng-disabled="currentFilter[\'private\']"> <i ng-show="file.private" class="fa fa-lock icon-locked" aria-hidden="true" data-toggle="tooltip" title="Private Document. Not visible for other users!"></i> </button> </td> <td> <div class="dropdown pull-right"> <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> <span class="line"></span> <span class="line"></span> <span class="line"></span> </button> <ul class="dropdown-menu" aria-labelledby="dropdownMenu1"> <!-- download --> <li> <a ng-href="#" target="_self" class="" ng-click="onDownloadClick(file._id)" data-toggle="tooltip" title="Download Markdown"> Download </a> </li> <!-- history --> <li> <a ng-href="#/history/{{file._id}}" target="_self" class="" data-toggle="tooltip" title="Show History"> Frühere Versionen </a> </li> <!-- edit --> <li> <a class="" ng-click="onEditClick(file._id)" data-toggle="tooltip" title="File Settings"> Editieren </a> </li> </ul> </div> </td> </tr> </table> </div>'),
a.put("views/templates/navbar.html",'<div class="header" ng-show="isActive(\'/editor/:id\') || isActive(\'/preview\')"> <div class="navbar navbar-default" role="navigation"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#js-navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand nav-link">mdWriter</a> </div> <div class="collapse navbar-collapse" id="js-navbar-collapse"> <ul class="nav navbar-nav" ng-init="selectedTab = \'editor\'"> <li ng-class="{\'active\':selectedTab === \'editor\'}"> <a href="#/editor" class="nav-link" ng-click="selectedTab = \'editor\'">Editor</a> </li> <li ng-class="{\'active\':selectedTab === \'preview\'}"> <a href="#/preview" class="nav-link" ng-click="selectedTab = \'preview\'">Preview</a> </li> </ul> </div> </div> </div> </div>')}]);